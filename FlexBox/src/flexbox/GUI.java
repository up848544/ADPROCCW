/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flexbox;

import java.awt.Color;

/**
 *
 * @author Albert
 */
public class GUI extends javax.swing.JFrame
{

    /**
     * Creates new form GUI
     */
    public GUI()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        gradeButtonGroup = new javax.swing.ButtonGroup();
        colourButtonGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        inputPanel = new javax.swing.JPanel();
        sizePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        widthInput = new javax.swing.JSpinner();
        heightInput = new javax.swing.JSpinner();
        depthInput = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        quantityInput = new javax.swing.JSpinner();
        gradePanel = new javax.swing.JPanel();
        grade1RadioButton = new javax.swing.JRadioButton();
        grade2RadioButton = new javax.swing.JRadioButton();
        grade3RadioButton = new javax.swing.JRadioButton();
        grade4RadioButton = new javax.swing.JRadioButton();
        grade5RadioButton = new javax.swing.JRadioButton();
        colourPanel = new javax.swing.JPanel();
        colourNoneRadioButton = new javax.swing.JRadioButton();
        colour1RadioButton = new javax.swing.JRadioButton();
        colour2RadioButton = new javax.swing.JRadioButton();
        otherPanel = new javax.swing.JPanel();
        reinforcedBottomInput = new javax.swing.JToggleButton();
        reinforcedCornerInput = new javax.swing.JToggleButton();
        sealableTopInput = new javax.swing.JToggleButton();
        controlsPanel = new javax.swing.JPanel();
        clearButton = new javax.swing.JButton();
        addToOrderButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FlexBox Order");
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        inputPanel.setLayout(new java.awt.GridBagLayout());

        sizePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Size (in metres)"));
        sizePanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Width  Height  Depth");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        sizePanel.add(jLabel1, gridBagConstraints);

        widthInput.setModel(new javax.swing.SpinnerNumberModel(0.1d, 0.1d, 5.0d, 0.01d));
        widthInput.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                widthInputStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        sizePanel.add(widthInput, gridBagConstraints);

        heightInput.setModel(new javax.swing.SpinnerNumberModel(0.1d, 0.1d, 5.0d, 0.01d));
        heightInput.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                heightInputStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        sizePanel.add(heightInput, gridBagConstraints);

        depthInput.setModel(new javax.swing.SpinnerNumberModel(0.1d, 0.1d, 5.0d, 0.01d));
        depthInput.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                depthInputStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        sizePanel.add(depthInput, gridBagConstraints);

        jLabel2.setText("Quantity");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        sizePanel.add(jLabel2, gridBagConstraints);

        quantityInput.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));
        quantityInput.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                quantityInputStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        sizePanel.add(quantityInput, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        inputPanel.add(sizePanel, gridBagConstraints);

        gradePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Grade"));
        gradePanel.setToolTipText("");
        gradePanel.setName(""); // NOI18N
        gradePanel.setLayout(new java.awt.GridLayout());

        gradeButtonGroup.add(grade1RadioButton);
        grade1RadioButton.setSelected(true);
        grade1RadioButton.setText("1");
        grade1RadioButton.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                grade1RadioButtonStateChanged(evt);
            }
        });
        gradePanel.add(grade1RadioButton);

        gradeButtonGroup.add(grade2RadioButton);
        grade2RadioButton.setText("2");
        grade2RadioButton.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                grade2RadioButtonStateChanged(evt);
            }
        });
        gradePanel.add(grade2RadioButton);

        gradeButtonGroup.add(grade3RadioButton);
        grade3RadioButton.setText("3");
        grade3RadioButton.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                grade3RadioButtonStateChanged(evt);
            }
        });
        gradePanel.add(grade3RadioButton);

        gradeButtonGroup.add(grade4RadioButton);
        grade4RadioButton.setText("4");
        grade4RadioButton.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                grade4RadioButtonStateChanged(evt);
            }
        });
        gradePanel.add(grade4RadioButton);

        gradeButtonGroup.add(grade5RadioButton);
        grade5RadioButton.setText("5");
        grade5RadioButton.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                grade5RadioButtonStateChanged(evt);
            }
        });
        gradePanel.add(grade5RadioButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        inputPanel.add(gradePanel, gridBagConstraints);

        colourPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Colour"));
        colourPanel.setLayout(new java.awt.GridLayout());

        colourButtonGroup.add(colourNoneRadioButton);
        colourNoneRadioButton.setSelected(true);
        colourNoneRadioButton.setText("None");
        colourNoneRadioButton.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                colourNoneRadioButtonStateChanged(evt);
            }
        });
        colourPanel.add(colourNoneRadioButton);

        colourButtonGroup.add(colour1RadioButton);
        colour1RadioButton.setText("1");
        colour1RadioButton.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                colour1RadioButtonStateChanged(evt);
            }
        });
        colourPanel.add(colour1RadioButton);

        colourButtonGroup.add(colour2RadioButton);
        colour2RadioButton.setText("2");
        colour2RadioButton.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                colour2RadioButtonStateChanged(evt);
            }
        });
        colourPanel.add(colour2RadioButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        inputPanel.add(colourPanel, gridBagConstraints);

        otherPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Other"));
        otherPanel.setLayout(new java.awt.GridLayout(3, 0));

        reinforcedBottomInput.setText("Reinforced Bottom");
        reinforcedBottomInput.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                reinforcedBottomInputStateChanged(evt);
            }
        });
        otherPanel.add(reinforcedBottomInput);

        reinforcedCornerInput.setText("Reinforced Corners");
        reinforcedCornerInput.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                reinforcedCornerInputStateChanged(evt);
            }
        });
        otherPanel.add(reinforcedCornerInput);

        sealableTopInput.setText("Sealable Top");
        sealableTopInput.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sealableTopInputStateChanged(evt);
            }
        });
        otherPanel.add(sealableTopInput);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        inputPanel.add(otherPanel, gridBagConstraints);

        controlsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Controls"));
        controlsPanel.setLayout(new java.awt.GridLayout(2, 0));

        clearButton.setText("Clear Order");
        controlsPanel.add(clearButton);

        addToOrderButton.setText("Add To Order");
        addToOrderButton.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                addToOrderButtonMouseClicked(evt);
            }
        });
        controlsPanel.add(addToOrderButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        inputPanel.add(controlsPanel, gridBagConstraints);

        errorLabel.setText(" ");
        errorLabel.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 905, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorLabel)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addToOrderButtonMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_addToOrderButtonMouseClicked
    {//GEN-HEADEREND:event_addToOrderButtonMouseClicked
        // TODO add your handling code here:
        if (order.canSupply(depth, width, depth, grade, colour, sealableTop, sealableTop, sealableTop, WIDTH))
        {
            order.addBox(height, width, depth, grade, colour, sealableTop, reinforcedBottom, reinforcedCorner, quantity);
        }
    }//GEN-LAST:event_addToOrderButtonMouseClicked

    private void widthInputStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_widthInputStateChanged
    {//GEN-HEADEREND:event_widthInputStateChanged
        // TODO add your handling code here:
        width = (double) widthInput.getValue();
        check();
    }//GEN-LAST:event_widthInputStateChanged

    private void heightInputStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_heightInputStateChanged
    {//GEN-HEADEREND:event_heightInputStateChanged
        // TODO add your handling code here:
        height = (double) heightInput.getValue();
        check();
    }//GEN-LAST:event_heightInputStateChanged

    private void depthInputStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_depthInputStateChanged
    {//GEN-HEADEREND:event_depthInputStateChanged
        // TODO add your handling code here:
        depth = (double) depthInput.getValue();
        check();
    }//GEN-LAST:event_depthInputStateChanged

    private void quantityInputStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_quantityInputStateChanged
    {//GEN-HEADEREND:event_quantityInputStateChanged
        // TODO add your handling code here:
        quantity = (int) widthInput.getValue();
        check();
    }//GEN-LAST:event_quantityInputStateChanged

    private void grade1RadioButtonStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_grade1RadioButtonStateChanged
    {//GEN-HEADEREND:event_grade1RadioButtonStateChanged
        // TODO add your handling code here:
        if (grade1RadioButton.isSelected())
        {
            grade = 1;
        }
        check();
    }//GEN-LAST:event_grade1RadioButtonStateChanged

    private void grade2RadioButtonStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_grade2RadioButtonStateChanged
    {//GEN-HEADEREND:event_grade2RadioButtonStateChanged
        // TODO add your handling code here:
        if (grade2RadioButton.isSelected())
        {
            grade = 2;
        }
        check();
    }//GEN-LAST:event_grade2RadioButtonStateChanged

    private void grade3RadioButtonStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_grade3RadioButtonStateChanged
    {//GEN-HEADEREND:event_grade3RadioButtonStateChanged
        // TODO add your handling code here:
        if (grade3RadioButton.isSelected())
        {
            grade = 3;
        }
        check();
    }//GEN-LAST:event_grade3RadioButtonStateChanged

    private void grade4RadioButtonStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_grade4RadioButtonStateChanged
    {//GEN-HEADEREND:event_grade4RadioButtonStateChanged
        // TODO add your handling code here:
        if (grade4RadioButton.isSelected())
        {
            grade = 4;
        }
        check();
    }//GEN-LAST:event_grade4RadioButtonStateChanged

    private void grade5RadioButtonStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_grade5RadioButtonStateChanged
    {//GEN-HEADEREND:event_grade5RadioButtonStateChanged
        // TODO add your handling code here:
        if (grade5RadioButton.isSelected())
        {
            grade = 5;
        }
        check();
    }//GEN-LAST:event_grade5RadioButtonStateChanged

    private void colourNoneRadioButtonStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_colourNoneRadioButtonStateChanged
    {//GEN-HEADEREND:event_colourNoneRadioButtonStateChanged
        // TODO add your handling code here:
        if (colourNoneRadioButton.isSelected())
        {
            colour = 0;
        }
        check();
    }//GEN-LAST:event_colourNoneRadioButtonStateChanged

    private void colour1RadioButtonStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_colour1RadioButtonStateChanged
    {//GEN-HEADEREND:event_colour1RadioButtonStateChanged
        // TODO add your handling code here:
        if (colour1RadioButton.isSelected())
        {
            colour = 1;
        }
        check();
    }//GEN-LAST:event_colour1RadioButtonStateChanged

    private void colour2RadioButtonStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_colour2RadioButtonStateChanged
    {//GEN-HEADEREND:event_colour2RadioButtonStateChanged
        // TODO add your handling code here:
        if (colour2RadioButton.isSelected())
        {
            colour = 2;
        }
        check();
    }//GEN-LAST:event_colour2RadioButtonStateChanged

    private void reinforcedBottomInputStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_reinforcedBottomInputStateChanged
    {//GEN-HEADEREND:event_reinforcedBottomInputStateChanged
        // TODO add your handling code here:
        reinforcedBottom = reinforcedBottomInput.isSelected();
        check();
    }//GEN-LAST:event_reinforcedBottomInputStateChanged

    private void reinforcedCornerInputStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_reinforcedCornerInputStateChanged
    {//GEN-HEADEREND:event_reinforcedCornerInputStateChanged
        // TODO add your handling code here:
        reinforcedCorner = reinforcedCornerInput.isSelected();
        check();
    }//GEN-LAST:event_reinforcedCornerInputStateChanged

    private void sealableTopInputStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sealableTopInputStateChanged
    {//GEN-HEADEREND:event_sealableTopInputStateChanged
        // TODO add your handling code here:
        sealableTop = sealableTopInput.isSelected();
        check();
    }//GEN-LAST:event_sealableTopInputStateChanged
    public void check()
    {
        if (order.canSupply(depth, width, depth, grade, colour, sealableTop, reinforcedBottom, reinforcedCorner, quantity))
        {
            errorLabel.setVisible(false);
        } else
        {
            errorLabel.setVisible(true);
            errorLabel.setText("ERROR BOX CANNOT BE SUPPLIED");
            errorLabel.setBackground(Color.red);
        }
    }
    public static Order order = new Order();
    static int grade, colour, quantity;
    static double depth, height, width;
    static boolean sealableTop, reinforcedCorner, reinforcedBottom;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new GUI().setVisible(true);
                
                grade = 1;
                colour = 0;
                quantity = 1;
                depth = 0.1;
                height = 0.1;
                width = 0.1;
                sealableTop = false;
                reinforcedCorner = false;
                reinforcedBottom = false;
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToOrderButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JRadioButton colour1RadioButton;
    private javax.swing.JRadioButton colour2RadioButton;
    private javax.swing.ButtonGroup colourButtonGroup;
    private javax.swing.JRadioButton colourNoneRadioButton;
    private javax.swing.JPanel colourPanel;
    private javax.swing.JPanel controlsPanel;
    private javax.swing.JSpinner depthInput;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JRadioButton grade1RadioButton;
    private javax.swing.JRadioButton grade2RadioButton;
    private javax.swing.JRadioButton grade3RadioButton;
    private javax.swing.JRadioButton grade4RadioButton;
    private javax.swing.JRadioButton grade5RadioButton;
    private javax.swing.ButtonGroup gradeButtonGroup;
    private javax.swing.JPanel gradePanel;
    private javax.swing.JSpinner heightInput;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel otherPanel;
    private javax.swing.JSpinner quantityInput;
    private javax.swing.JToggleButton reinforcedBottomInput;
    private javax.swing.JToggleButton reinforcedCornerInput;
    private javax.swing.JToggleButton sealableTopInput;
    private javax.swing.JPanel sizePanel;
    private javax.swing.JSpinner widthInput;
    // End of variables declaration//GEN-END:variables
}
